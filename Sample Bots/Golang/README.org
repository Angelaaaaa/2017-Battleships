* Installation
** For Windows:
1. Download [[https://storage.googleapis.com/golang/go1.8.1.windows-amd64.msi][golang compiler for windows]] OR the [[https://golang.org/dl/][zip version]] if you wish to configure it yourself.
2. Instructions provided [[https://golang.org/doc/install#windows][here]]
3. Please ensure the =Go/bin= folder is available in the system PATH.
4. Please install git as it is part of the =go get= command's package management system
5. Ensure Git is in the system path.


* Notes on alternative compilation

** GameEngine rebuild for those who don't like guis.
In case you're a =mono/C#= newcomer here is a small Makefile that may assist in rebuilding the GameEngine from scratch and running test matches.

Create a Makefile at =GameEngine/Battleships/Makefile= with the following:

#+BEGIN_SRC makefile :tangle ../../GameEngine/Battleships/Makefile
  MONO=mono
  XBUILD=xbuild
  SOURCEDIR=.
  NUGET=nuget
  TARGET=$(SOURCEDIR)/Battleships/bin/Debug/Battleships.exe
  PACKAGEDIR=./packages/
  NUGETCMD=$(NUGET) install -OutputDirectory $(PACKAGEDIR)
  DEPS=$(shell find $(SOURCEDIR) -name 'packages.config')

  $(PACKAGEDIR):
	  mkdir $(PACKAGEDIR)

  $(DEPS): $(PACKAGEDIR)
	  @echo "finding dependencies and installing"
	  @$(foreach dep, $(DEPS), $(NUGETCMD) $(dep);)

  clean-objs:
	  rm -fr $(SOURCEDIR)/Battleships/bin/
	  rm -fr $(SOURCEDIR)/Battleships/obj/
	  rm -fr $(SOURCEDIR)/Battleships/Battleships/bin/
	  rm -fr $(SOURCEDIR)/Battleships/Battleships/obj/
	  rm -fr $(SOURCEDIR)/Battleships/Domain/bin/
	  rm -fr $(SOURCEDIR)/Battleships/Domain/obj/
	  rm -fr $(SOURCEDIR)/Battleships/GameEngine/bin/
	  rm -fr $(SOURCEDIR)/Battleships/GameEngine/obj/
	  rm -fr $(SOURCEDIR)/Battleships/Tests.Domain/bin/
	  rm -fr $(SOURCEDIR)/Battleships/Tests.Domain/obj/
	  rm -fr $(SOURCEDIR)/Battleships/BotRunner/bin/
	  rm -fr $(SOURCEDIR)/Battleships/BotRunner/obj/


  clean-all: clean-objs
	  rm -fr $(PACKAGEDIR)
	  find $(SOURCEDIR)/ -iname "*.exe" -iname "*.dll" -iname "*.obj" -delete

  $(TARGET):
	  @echo "building"
	  $(XBUILD) $(SOURCEDIR)/Battleships.sln


  deps: $(DEPS)

  all: $(TARGET)

  REFBOTHOME=$(HOME)/source/entelect-2017/dls/Version\ 1.0.0/refbots
  SAMPLEBOTHOME=$(HOME)/source/entelect-2017/2017-Battleships/Sample\ Bots
  runbots:
	  $(MONO) $(TARGET) -b $(REFBOTHOME)/C# $(SAMPLEBOTHOME)/Golang  --clog --pretty --debug 


  runbots-recompile:
	  rm -fr $(SAMPLEBOTHOME)/Golang/main
	  rm -fr $(SAMPLEBOTHOME)/C#/SampleBot/bin
	  $(MONO) $(TARGET) -b $(SAMPLEBOTHOME)/C#/SampleBot $(SAMPLEBOTHOME)/Golang  --clog --pretty --debug --forceRebuild
#+END_SRC

which is used as follows:

#+BEGIN_SRC bash
  make deps  # call Nuget for all package configs in the build tree.
  make clean-objs all runbots  # run, modify, repeat
#+END_SRC

** Cross compilation of Windows Golang target from Linux

#+BEGIN_SRC bash
  GOOS=windows GOARCH=amd64 go build -o /some_refbot_dir/go/gobot.exe main.go
#+END_SRC


* Compilation notes 
  #+BEGIN_SRC bash
    pushd /home/stephan/source/entelect-2017/2017-Battleships/Sample\ Bots/Golang &&  go build -o main -a .  && popd
  #+END_SRC

